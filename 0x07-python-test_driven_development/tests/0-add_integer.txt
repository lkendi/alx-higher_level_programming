#Docs to test the add integer function
>>> add_integer = __import__('0-add_integer').add_integer
>>> print(add_integer(1, 2))
3
>>> print(add_integer(100, -2))
98
>>> print(add_integer(2))
100
>>> print(add_integer(100.3, -2))
98
>>> try:
...     print(add_integer(4, "School"))
... except Exception as e:
...     print(e)
... 
b must be an integer
>>> try:
...     print(add_integer(None))
... except Exception as e:
...     print(e)
... 
a must be an integer
>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(float('NaN'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  ...
    return int(a) + int(b)
ValueError: cannot convert float NaN to integer
>>> add_integer(float('inf'), 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  ...
    return int(a) + int(b)
OverflowError: cannot convert float infinity to integer