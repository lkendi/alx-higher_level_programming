>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_2 = [1, 2, 3, 4, 5, 6]
>>> print(matrix_divided(matrix_2, 2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  ...
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> print(matrix_divided(matrix, "1"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  ...
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> print(matrix_divided(matrix, [1, 2, 2.0]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  ...
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_3 = [[1, 2], [3, 4, 5], [6, 7]]
>>> print(matrix_divided(matrix_3, 3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  ...
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> print(matrix_divided(matrix, 2.7))
[[0.37, 0.74, 1.11], [1.48, 1.85, 2.22]]